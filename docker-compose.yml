version: '3.8'

services:
  # PostgreSQL container
  db:
    image: postgres:15
    container_name: miracle_postgres
    restart: always
    environment:
      POSTGRES_DB: miracle_scrap
      POSTGRES_USER: edwardch
      POSTGRES_PASSWORD: 123456
    ports:
      - "5434:5432"  # Expose PostgreSQL on port 5434
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/database/init.sql:/docker-entrypoint-initdb.d/init.sql  # Initialize with the SQL script
    networks:
      - miracle-network
    platform: linux/arm64

  # Backend container 
  backend:
    build: ./backend  
    container_name: miracle_backend
    depends_on:
      - db  
    environment:
      DB_NAME: miracle_scrap
      DB_USER: edwardch
      DB_PASSWORD: 123456
      DB_HOST: db  
      DB_PORT: 5432
    ports:
      - "8000:8000" 
    volumes:
      - ./backend:/app 
    networks:
      - miracle-network
    platform: linux/arm64

  # Frontend container 
  frontend:
    build: ./frontend  
    container_name: miracle_frontend
    depends_on:
      - backend  
    ports:
      - "3000:3000"  
    networks:
      - miracle-network
    platform: linux/arm64

  # Scraper container
  scraper:
    build: ./data/scrap
    container_name: miracle_scraper
    environment:
      DB_NAME: miracle_scrap
      DB_USER: edwardch
      DB_PASSWORD: 123456
      DB_HOST: db  
      DB_PORT: 5432
    depends_on:
      - db  
    volumes:
      - ./data/scrap:/app  
    entrypoint: ["python", "scraper.py"]  
    networks:
      - miracle-network
    platform: linux/arm64

volumes:
  postgres_data:

networks:
  miracle-network:
    driver: bridge